<!DOCTYPE html>
<html>
<head>
    <title>Sinatra image reizer by @dux</title>
    <style>
      body { font-family: arial; font-size:15px; margin-left:30px; }
      input { padding:4px; width:70px; font-size:14px; }
      button { padding: 7px; font-size: 14px;}
      td { height:40px; }
      td.l { width:150px; text-align: right; padding-right: 20px; }
      li { margin-bottom:10px; }
      #error div { background-color: #faa; padding:4px; }
      h2 { margin-top: 40px; }
    </style>
    <script>
      window.inform = function(what) {
        document.getElementById('error').innerHTML = '<div>' + what + '</div>';
        console.log(what);
      };

      window.open_url = function(debug) {
        var opts = {}, url = [], val, width, height;

        document.getElementById('error').innerHTML = '';

        for (el of ['image', 'q']) {
          val = document.getElementById(el).value;
          if (val) opts[el] = val
        }

        opts.size = document.getElementById('size').value || 200;

        if (! opts.image) {
          return inform('Image URL is required');
        }

        for (k of Object.keys(opts)) {
          url.push(k + '=' + escape(opts[k]))
        }

        url = url.join('&')
        var live_url = '/r?' + url
        var pack_url = '/pack?' + url

        document.getElementById('hash').innerHTML = JSON.stringify(opts)
        document.getElementById('live').innerHTML = '<a target="_new" href="' + live_url + '">' + live_url + '</a>'
        document.getElementById('pack').innerHTML = '<a target="_new" href="' + pack_url + '">' + pack_url + '</a>'
      }
    </script>
</head>
<body>
  <h1>Ruby Rack image reizer by @dux</h1>

  <h3>v<%= @version %> &mdash; server mode <%= ENV.fetch('RACK_ENV') %></h3>

  <h2>Client usage</h2>
  <pre>
require "rack_image_resizer"

RackImageResizer.set :secret, "foobarbaz"
RackImageResizer.set :server, "https://resizer.myapp.com"

# RackImageResizer.build s: '^200x100'

@image.url.resized("200")      # resize image width to 200px
@image.url.resized("x200")     # resize image height to 200px
@image.url.resized("200x200")  # resize image to fix 200x200 box
@image.url.resized("^200x200") # resize crop image width to 200x200
@image.url.resized("^200")     # resize crop image width to 200x200
@image.url.resized("u^100")    # resize crop image width to 100x100 and apply unsharp mask

# or
@image.url.resized + '?s=x200' # dinamicly assign resize attributes
  </pre>

  <h2>Tester or try <a href="/test">bulk tester</a></h2>

  <table>
    <tr>
      <td></td>
      <td id="error"></td>
    </tr>
    <tr>
      <td class="l">Image URL</td>
      <td><input id="image" style="width:300px;" value="http://i.imgur.com/krurDGE.jpg" /></td>
    </tr>
    <tr>
      <td class="l">Size</td>
      <td><input id="size" placeholder="200" /></td>
    </tr>
    <tr>
      <td class="l">Quality</td>
      <td><input id="q" placeholder="90" /></td>
    </tr>
    <tr>
      <td class="l">opts</td>
      <td><div id="hash">...</div></td>
    </tr>
    <tr>
      <td class="l">Live (only dev)</td>
      <td><div id="live">...</div></td>
    </tr>
    <tr>
      <td class="l">Pack</td>
      <td><div id="pack">...</div></td>
    </tr>
    <tr>
      <td></td>
      <td><button onclick="open_url()">request</button>
    </tr>
  </table>

  <p>info: in development options can be sent as query string</p>

</body>
</html>
